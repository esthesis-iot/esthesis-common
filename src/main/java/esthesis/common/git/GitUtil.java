package esthesis.common.git;

import java.util.Properties;
import lombok.Getter;
import lombok.extern.slf4j.Slf4j;

/**
 * Utility class to read git properties from a git.properties file generated by the Maven plugin
 * git-commit-id-maven-plugin.
 */
@Slf4j
public class GitUtil {

  private static final String GIT_PROPERTIES_NAME = "git.properties";

  @Getter
  private boolean initialised = false;
  private final Properties properties = new Properties();

  public static final String GIT_PROPERTY_BUILD_TIME = "git.build.time";
  public static final String GIT_PROPERTY_VERSION = "git.build.version";
  public static final String GIT_PROPERTY_COMMIT_ID_ABBREV = "git.commit.id.abbrev";
  public static final String GIT_PROPERTY_COMMIT_ID_FULL = "git.commit.id.full";

  /**
   * Constructor that reads the git.properties file.
   */
  public GitUtil() {
    try {
      properties.load(GitUtil.class.getClassLoader().getResourceAsStream(GIT_PROPERTIES_NAME));
      initialised = true;
    } catch (Exception e) {
      log.warn("Could not read {} file.", GIT_PROPERTIES_NAME);
    }
  }

  /**
   * Get a git property.
   *
   * @param gitProperty the git property to get.
   * @return the value of the git property, or null if the property is not found.
   */
  public String getGitProperty(String gitProperty) {
    if (initialised) {
      return properties.getProperty(gitProperty);
    } else {
      return null;
    }
  }

}
